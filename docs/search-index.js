var searchIndex = JSON.parse('{\
"headache":{"doc":"","t":"RAAAFDLLFLLLLLLNENNENNLLLLLLLLLLLLLLLLLDLLLLLLMLMLLLL","n":["MEMORY_SIZE","compiler","error","executor","test","Executable","borrow","borrow_mut","compile","from","into","run","try_from","try_into","type_id","CompileError","Error","IncompleteLoop","ParseError","ParserError","RuntimeError","UnexpectedToken","borrow","borrow","borrow_mut","borrow_mut","fail","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","Executor","_execute","borrow","borrow_mut","default","execute","from","index","into","memory","new","try_from","try_into","type_id"],"q":[[0,"headache"],[5,"headache::compiler"],[15,"headache::error"],[39,"headache::executor"]],"d":["Constant representing the size of the memory array used by …","","","","","Struct representing a compiled Brainfuck program.","","","Function to compile a Brainfuck program into an <code>Executable</code> …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Function to run the compiled Brainfuck program.","","","","","","Error indicating that a loop was not closed properly.","","Enum representing possible errors that can occur during …","","Error indicating that an unexpected token was encountered.","","","","","Function to handle parser errors and exit the program.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Struct representing the state of a Brainfuck program.","Function to execute a vector of Brainfuck instructions.","","","Function to create a new State with an initialized memory …","Function to execute a string of Brainfuck code.","Returns the argument unchanged.","Index representing the current position of the data …","Calls <code>U::from(self)</code>.","Array representing the memory used by the Brainfuck …","Function to create a new State with an initialized memory …","","",""],"i":[0,0,0,0,0,0,5,5,0,5,5,5,5,5,5,6,0,9,6,0,6,9,6,9,6,9,9,6,9,6,9,6,9,6,9,6,9,6,9,0,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[0,0,0,0,[[],1],0,[[]],[[]],[[2,3,4],[[7,[5,6]]]],[[]],[[]],[5,[[7,[6]]]],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[9,10],[[6,11],12],[[9,11],12],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],0,[[[13,[3,4]],[14,[0]]],[[7,[6]]]],[[]],[[]],[[],[[13,[15,16]]]],[[[13,[3,4]],2],[[7,[6]]]],[[]],0,[[]],0,[[3,4],[[13,[3,4]]]],[[],7],[[],7],[[],8]],"c":[],"p":[[15,"u8"],[15,"str"],[8,"Read"],[8,"Write"],[3,"Executable"],[4,"Error"],[4,"Result"],[3,"TypeId"],[4,"ParserError"],[15,"never"],[3,"Formatter"],[6,"Result"],[3,"Executor"],[15,"slice"],[3,"Stdin"],[3,"Stdout"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
